#!/bin/bash

# This the base template suitable for having a standalone running integrationtest admin ui.
# Howto use when manually created:
# - copy this script to a dedicated folder (X)
# - define system properties and/or environment entries as necessary
# - call ./gradlew buildDeveloperAdminUI
# - copy build/libs/sechub-developer-admin-ui-0.0.0.jar to the folder (X)
# - ensure script is executable and you have a java >=8 available on your system
# - call the script and you are done
# 
#  

DAUI_VERSION="0.0.0"

export SECHUB_ADMIN_USERID=int-test_superadmin # your admin user id
export SECHUB_ADMIN_APITOKEN=int-test_superadmin-pwd
export SECHUB_ADMIN_SERVER=localhost # server IP or name
export SECHUB_ADMIN_SERVER_PORT=8443
export SECHUB_ADMIN_SERVER_PROTOCOL=https

export SECHUB_ENABLE_INTEGRATION_TESTSERVER_MENU=true
export SECHUB_DISABLE_CONFIRMATIONS=true
export SECHUB_CHECK_STATUS_ON_STARTUP=false

export SECHUB_ADMIN_ENVIRONMENT=localhost #Use : localhost, no color. Dedicated menu colors for: PROD, INT or TESTxyz

export SECHUB_MASS_OPERATION_PARENTDIRECTORY=/home/$UID/.sechub/inttest/mass-operations #mass operation directory (containign csv files )
export SECHUB_TARGETFOLDER_FOR_SECHUB_CLIENT_SCAN="/home/$USER/.sechub/test-targetfolder1"

export SECHUB_PATH_TO_SECHUB_CLIENT_BINARY="/home/$USER/.local/bin/sechub"
export SECHUB_TRUSTALL_DENIED=false; # change this for other environments!

# when next entry is set to true TRUSTALL is denied (currently only at go client)
echo "-------------------------------------------------------------"
echo "Starting DAUI $DAUI_VERSION (Developer Admin UI)"
echo "-------------------------------------------------------------"
echo "- SECHUB_TARGETFOLDER_FOR_SECHUB_CLIENT_SCAN:$SECHUB_TARGETFOLDER_FOR_SECHUB_CLIENT_SCAN"
echo "- SECHUB_PATH_TO_SECHUB_CLIENT_BINARY:       $SECHUB_PATH_TO_SECHUB_CLIENT_BINARY"
java -jar sechub-developer-admin-ui-$DAUI_VERSION.jar

echo "Press any key to continue"
while [ true ] ; do
read -t 3 -n 1
if [ $? = 0 ] ; then
exit ;
fi
done
